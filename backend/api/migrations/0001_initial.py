# Generated by Django 5.1.3 on 2025-02-18 19:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('nip', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('city', models.CharField(max_length=100)),
                ('postcode', models.CharField(max_length=20)),
                ('street', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('Boss', 'Boss'), ('Employee', 'Employee')], default='Employee', max_length=20)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('pesel', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Mężczyzna'), ('F', 'Kobieta'), ('I', 'Inna')], max_length=1, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('residential_address', models.TextField(blank=True, null=True)),
                ('mailing_address', models.TextField(blank=True, null=True)),
                ('work_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('private_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('employment_date', models.DateField(blank=True, null=True)),
                ('contract_type', models.CharField(choices=[('EMPLOYMENT', 'Umowa o pracę'), ('CONTRACT', 'Umowa zlecenie'), ('MANDATE', 'Umowa o dzieło'), ('B2B', 'Umowa B2B')], default='EMPLOYMENT', max_length=20)),
                ('contract_file', models.FileField(blank=True, null=True, upload_to='contracts/')),
                ('work_percentage', models.PositiveIntegerField(blank=True, help_text='Wymiar etatu (w %)', null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('salary_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=26, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('VACATION', 'VACATION'), ('TASK', 'TASK'), ('PROJECT', 'PROJECT'), ('PHASE', 'PHASE'), ('USER', 'USER'), ('CLIENT', 'CLIENT')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('MIESZKANIOWY', 'MIESZKANIOWY'), ('BLOKOWY', 'BLOKOWY'), ('DOM', 'DOM'), ('HALA', 'HALA'), ('PUBLICZNY', 'PUBLICZNY'), ('INNY', 'INNY')], max_length=50)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('OPEN', 'OPEN'), ('SUSPENDED', 'SUSPENDED'), ('CLOSED', 'CLOSED')], default='OPEN', max_length=20)),
                ('area', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('assigned_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('phase_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('type', models.CharField(choices=[('KONSULTACJE', 'KONSULTACJE'), ('PLANOWANIE', 'PLANOWANIE'), ('POPRAWKI', 'POPRAWKI'), ('PODSUMOWANIE', 'PODSUMOWANIE')], max_length=20)),
                ('status', models.CharField(choices=[('OPEN', 'OPEN'), ('SUSPENDED', 'SUSPENDED'), ('CLOSED', 'CLOSED')], default='OPEN', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('assigned_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('total_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('status', models.CharField(choices=[('OPEN', 'OPEN'), ('SUSPENDED', 'SUSPENDED'), ('CLOSED', 'CLOSED')], default='OPEN', max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('last_modification_date', models.DateTimeField(auto_now=True)),
                ('assigned_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.project')),
                ('assigned_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_date', models.DateTimeField()),
                ('work_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('comment', models.TextField(blank=True, null=True)),
                ('assigned_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.task')),
            ],
        ),
        migrations.CreateModel(
            name='Vacation',
            fields=[
                ('vacation_id', models.AutoField(primary_key=True, serialize=False)),
                ('vacation_date', models.DateField()),
                ('duration', models.DecimalField(decimal_places=1, default=8, max_digits=4)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('CONFIRMED', 'CONFIRMED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=20)),
                ('type', models.CharField(choices=[('ANNUAL', 'Urlop wypoczynkowy'), ('ON_DEMAND', 'Urlop na żądanie'), ('MATERNITY', 'Urlop macierzyński'), ('PATERNITY', 'Urlop ojcowski'), ('PARENTAL', 'Urlop rodzicielski'), ('CHILDCARE', 'Urlop wychowawczy'), ('UNPAID', 'Urlop bezpłatny'), ('SPECIAL', 'Urlop okolicznościowy'), ('TRAINING', 'Urlop szkoleniowy'), ('HEALTH', 'Urlop zdrowotny')], default='UNPAID', max_length=20)),
                ('comments', models.TextField(blank=True, null=True)),
                ('vacation_group_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('assigned_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
